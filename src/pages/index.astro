---
import Layout from "../components/Layout.astro";
import HeroImg from "../components/HeroImg.astro";
import HabilidadesData from "../data/Habilidades.json";
import Skills from "../components/Skills.astro";
import Conoceme from "../components/Conoceme.astro";
import Formulario from "../components/Formulario.astro";
import Cta from "../components/Cta.astro";
import Bento from "../components/Bento.astro";
---

<Layout titulo="Portafolio" descripction="Hola, soy Enrique Calero,me encanta maquetar sitios web a partir de una pieza grafica, siguiendo buenas practicas.Â¿Tienes un negocio y quieres dar a conocer tus servicios en internet?">
		<HeroImg />
		<section  id="Habilidades">
			<div class="CircleBlur--Habilidades degradado"></div>
			<div class="wrapper">
				<h2 class="titleSection">Habilidades</h2>
				<div class="Habilidades-Container">
					{
						HabilidadesData.map(({icono, texto}) =>{
							return <Skills nameIcon={icono} texto={texto}/>
						})
					}
				</div>
			</div>
		</section>
		<Bento />
		<Conoceme />
		<Cta />
		<Formulario />
</Layout>


<style lang="scss" >

	 .Habilidades-Container {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
        width: min(90%, 700px);
        margin-inline: auto;
    }

	.Proyectos-Container {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;

        @media (width > 768px) {
            grid-template-columns: repeat(2, 1fr);
        }
        @media (width > 1024px) {
            grid-template-columns: repeat(3, 1fr);
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const images =
            document.querySelectorAll<HTMLImageElement>("img[data-srcx]");

        const imgOptions = {
            rootMargin: `0px 0px 400px 0px`,
        };
        const imgObserver = new IntersectionObserver((entries, imgObserver) => {
            entries.forEach((entry) => {
                if (!entry.isIntersecting) return;

                const img = entry.target as HTMLImageElement;
                img.src = img.getAttribute("data-srcx");
                imgObserver.unobserve(entry.target);
            });
        }, imgOptions);

        images.forEach((img) => {
            imgObserver.observe(img);
        });
    });
</script>
