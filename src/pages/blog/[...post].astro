---
import { getCollection, getEntry } from "astro:content";
import BlogLayout from "../../layout/BlogLayout.astro";
import { getEntries } from "astro:content";
import Articulos from "@/components/Articulos.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { post: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { descriptionPage, titlePage } = entry.data;
const { Content, headings } = await entry.render();

const postReference = entry.data.postReference
  ? await getEntries(entry.data.postReference)
  : [];
// console.log(postReference.map((b) => b.data.titlePage));
---

<BlogLayout description={descriptionPage} title={titlePage}>
  <Content />
  <Fragment slot="mapa">
    <h4 class="color-neutral-000">En esta PÃ¡gina</h4>
    <nav class="navIndice">
      {
        headings.map(({ slug, text }) => {
          return (
            <a href={`#${slug}`} class="navIndice__link fs-small">
              {text}
            </a>
          );
        })
      }
    </nav>
  </Fragment>
  { postReference.length > 0 && <h4>Articulos Relacionados</h4>}
  <ul class="grid @md:grid-col:2">
    {
      postReference.map((entry) => {
        return (
          <li>
            <Articulos
              {...entry.data}
              slug={entry.slug}
              collection={entry.collection}
            />
          </li>
        );
      })
    }
  </ul>
</BlogLayout>

<style lang="scss">
  .navIndice {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    &__link {
      display: block;
      color: #a5a5bf;
      padding-left: 0.5rem;
      border-left: 2px solid transparent;

      &.active {
        border-left: 2px solid #1a56db;
        color: white;
      }
    }
  }
</style>
